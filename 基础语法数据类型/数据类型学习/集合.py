#集合1、不同元素组成2、无序3、元素不可变类型
'''
S={1,2,3,4}
'''
#for循环元素，不重复显示集合
'''
s=set('hello')
print(s)
'''
#列表转集合，并去重
'''
s=set(['alex','alex','sb'])
print(s)
'''
'''
s={1,2,3,4,5,6}
#向集合加入数字、字符串(集合不能加入列表，可加入元组）
s.add((1,7,'abc'))
print(s)
#清空列表
s.clear()
print(s)
#拷贝
v=s.copy()
print(v)
'''
'''
s={1,2,3,4,5,6,7,8,9}
#随机删除一个元素
v=s.pop()
print(s,v)
#指定删除存在的元素
s.remove(4)
print(s)
#指定删除存在的元素(元素不存在不会报错)
s.discard(2)
print(s)
'''

#取出列表中相同的部分
python_l=['szw','zjw','lcg']
Linux_l=['szw','zjw']
python_and_linux=[]
for p_name in python_l:
    if p_name in Linux_l:
        python_and_linux.append(p_name)
print(python_and_linux)
#集合关系
P_S=set(python_l)#列表转换为集合
L_S=set(Linux_l)#列表转换为集合
#交集
print(P_S.intersection(L_S))
print(P_S&L_S)
#并集
print(P_S.union(L_S))
print(P_S|L_S)
#交叉补集
B_S=P_S-L_S
print(B_S)
#为什么提示None？
print(P_S.difference_update(L_S))

#判断是否存在交集，存在False,不存在True
'''
s1={1,2}
s2={0,3,5}
print(s1.isdisjoint(s2))
'''
#判断两个集合是否是父子集关系(返回布尔值）
'''
s1={1,2,3}
s2={1,2,3,4}
#判断s1是s2的子集
print(s1.issubset(s2))
#判断s2是s1的父集
print(s2.issuperset(s1))
'''
#更新值并导入到s1
'''
s1={1,2,3}
s2={0,2,4}
#只能接一个值(数字或字符串）
s1.add(6)
#更新多个值，导入到s1中
s1.update(s2)
print(s1)
'''
#定义不可变集合(不能增加、修改内容）
s=frozenset('hello')
print(s)

